name: Build and Publish

on:
  push:
    branches:
      - main

env:
  CARGO_NAME: "relm-test"

jobs:
  build-linux:
    name: Build and Publish (Linux)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gtk-rs/gtk4-rs/gtk4:latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Cargo cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: |
          cargo build --release
          strip target/release/${{ env.CARGO_NAME }}
          mv target/release/${{ env.CARGO_NAME }} target/release/${{ env.CARGO_NAME }}-linux-x86_64

      - name: Save Cargo cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Determine Cargo version
        run: |
          export CARGO_PKG_VERSION=$(awk -F '"' '/version =/ {print $2}' Cargo.toml)
          export CARGO_PKG_PRERELEASE=$(awk -F '"' '/version =/ { if ($2 ~ /-.+/) print "true"; else print "false" }' Cargo.toml)
          echo "CARGO_PKG_VERSION=${CARGO_PKG_VERSION}"
          echo "CARGO_PKG_PRERELEASE=${CARGO_PKG_PRERELEASE}"

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/${{ env.CARGO_NAME }}-linux-x86_64
          tag_name: ${{ env.CARGO_PKG_VERSION }}
          prerelease: ${{ env.CARGO_PKG_PRERELEASE }}

  build-windows:
    name: Build and Publish (Windows)
    runs-on: windows-latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Cargo cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Restore GTK4
        id: cache-gtk4
        uses: actions/cache/restore@v3
        with:
          key: windows-gtk4
          path: |
            C:\gtk-build

      - name: Move git binary
        run: |
          Move-Item "C:\Program Files\Git\usr\bin" "C:\Program Files\Git\usr\notbin"
          Move-Item "C:\Program Files\Git\bin" "C:\Program Files\Git\notbin"

      - name: Build GTK4
        run: |
          python -m pip install --user pipx
          python -m pipx ensurepath
          pipx install gvsbuild
          gvsbuild build gtk4 --ninja-opts -j2

      - name: Restore git binary
        run: |
          Move-Item "C:\Program Files\Git\usr\notbin" "C:\Program Files\Git\usr\bin"
          Move-Item "C:\Program Files\Git\notbin" "C:\Program Files\Git\bin"

      - name: Save GTK4
        uses: actions/cache/save@v3
        with:
          key: ${{ steps.cache-gtk4.outputs.cache-primary-key }}
          path: |
            C:\gtk-build

      - name: Tree GTK release
        run: tree C:\gtk-build\gtk\x64\

      - name: Build
        shell: pwsh
        run: |
          $env:PATH="C:\gtk-build\gtk\x64\release\bin;" + $env:PATH
          $env:LIB="C:\gtk-build\gtk\x64\release\lib;" + $env:LIB
          $env:INCLUDE="C:\gtk-build\gtk\x64\release\include;C:\gtk-build\gtk\x64\release\include\cairo;C:\gtk-build\gtk\x64\release\include\glib-2.0;C:\gtk-build\gtk\x64\release\include\gobject-introspection-1.0;C:\gtk-build\gtk\x64\release\lib\glib-2.0\include;" + $env:INCLUDE
          $env:PKG_CONFIG_PATH="C:\gtk-build\gtk\x64\release\lib\pkgconfig;" + $env:PKG_CONFIG_PATH

          cargo build --release
          mkdir -p bundle
          mv target/release/${{ env.CARGO_NAME }}.exe bundle/${{ env.CARGO_NAME }}-windows-x86_64.exe
          cp C:\gtk-build\gtk\x64\release\bin\*.dll bundle/

      - name: Save Cargo cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Archive release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: zip
          path: bundle
          filename: ${{ env.CARGO_NAME }}-windows-x86_64.zip

      - name: Determine Cargo version
        shell: bash
        run: |
          export CARGO_PKG_VERSION=$(awk -F '"' '/version =/ {print $2}' Cargo.toml)
          export CARGO_PKG_PRERELEASE=$(awk -F '"' '/version =/ { if ($2 ~ /-.+/) print "true"; else print "false" }' Cargo.toml)
          echo "CARGO_PKG_VERSION=${CARGO_PKG_VERSION}"
          echo "CARGO_PKG_PRERELEASE=${CARGO_PKG_PRERELEASE}"

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.CARGO_NAME }}-windows-x86_64.zip
          tag_name: ${{ env.CARGO_PKG_VERSION }}
          prerelease: ${{ env.CARGO_PKG_PRERELEASE }}


  build-mac:
    name: Build and Publish (Mac)
    runs-on: macos-latest
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Cargo cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Install dependencies
        run: brew install gtk4

      - name: Build
        run: |
          cargo build --release
          strip target/release/${{ env.CARGO_NAME }}
          mv target/release/${{ env.CARGO_NAME }} target/release/${{ env.CARGO_NAME }}-macos-x86_64

      - name: Save Cargo cache
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Determine Cargo version
        run: |
          export CARGO_PKG_VERSION=$(awk -F '"' '/version =/ {print $2}' Cargo.toml)
          export CARGO_PKG_PRERELEASE=$(awk -F '"' '/version =/ { if ($2 ~ /-.+/) print "true"; else print "false" }' Cargo.toml)
          echo "CARGO_PKG_VERSION=${CARGO_PKG_VERSION}"
          echo "CARGO_PKG_PRERELEASE=${CARGO_PKG_PRERELEASE}"

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/${{ env.CARGO_NAME }}-macos-x86_64
          tag_name: ${{ env.CARGO_PKG_VERSION }}
          prerelease: ${{ env.CARGO_PKG_PRERELEASE }}

